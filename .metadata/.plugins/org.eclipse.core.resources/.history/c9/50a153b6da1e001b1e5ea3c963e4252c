package com.springcourse.repository;

import static org.assertj.core.api.Assertions.assertThat;

import java.util.Date;
import java.util.List;
import java.util.Optional;

import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import com.springcourse.domain.Request;
import com.springcourse.domain.User;
import com.springcourse.domain.enums.RequestState;

@RunWith(SpringRunner.class)
@SpringBootTest
public class RequestRepositoryTests {
	
	@Autowired private RequestRepository requestRepository;
	
	public void saveTest() {
		User owner = new User();
		owner.setId(1L);
		Request request = new Request(null, "Novo Dell", "Pretendo obter um laptop", new Date(), RequestState.OPEN, owner, null);
	
		Request createdRequest = requestRepository.save(request);
	
		assertThat(createdRequest.getId()).isEqualTo(1L);
	}
	
	public void updateTest() {
		
		User owner = new User();
		owner.setId(1L);
		Request request = new Request(1L, "Novo Dell", "Pretendo obter um laptop DELL de 16GB", null, RequestState.OPEN, owner, null);
	
		Request updatedRequest = requestRepository.save(request);
	
		assertThat(updatedRequest.getDescription()).isEqualTo("Pretendo obter um laptop DELL de 16GB");
		
	}
	
	public void getByIdTest() {
		
	 	Optional<Request> result = requestRepository.findById(1L);
		Request request = result.get();
		
		assertThat(request.getSubject()).isEqualTo("Novo Dell");
	}
	
	public void listTest() {
		List<Request> requests = requestRepository.findAll();
		assertThat(requests.size()).isEqualTo(1);
	}
	
	public void listByOwnerIdTest() {
		List<Request> requests = requestRepository.findAllByOwnerId(1L);
		assertThat(requests.size()).isEqualTo(1);	}
	
}
